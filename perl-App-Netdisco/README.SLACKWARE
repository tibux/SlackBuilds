## README.SLACKWARE ##

# Documentation
# - http://search.cpan.org/~oliver/App-Netdisco-2.014000/lib/App/Netdisco.pm

# Dependencies :
# - sbopkg
  cd /tmp
  wget http://sbopkg.googlecode.com/files/sbopkg-0.36.0-noarch-1_cng.tgz
  installpkg sbopkg-0.36.0-noarch-1_cng.tgz
# - SBo : perl-CPANPLUS-Dist-Slackware & postresql
  groupadd -g 209 postgres
  useradd -u 209 -g 209 -d /var/lib/pgsql postgres
  sbopkg -r # Sync the remote repository with the local mirror and then quit.
  sbopkg -i "fakeroot perl-CPANPLUS-Dist-Slackware postgresql"
# - others perl depencencies can be generate by perl-CPANPLUS-Dist-Slackware
  cpan2dist --format CPANPLUS::Dist::Slackware App::Netdisco
  rm -f /tmp/perl-App-Netdisco-*
  upgradepkg --install-new /tmp/perl-*_CPANPLUS.tgz

# Build
  sh perl-App-Netdisco.SlackBuild
  installpkg /tmp/perl-App-Netdisco-*.tgz

# Database / Bootstrap
  su postgres -c "initdb -D /var/lib/pgsql/data"
  /etc/rc.d/rc.postgresql start
  su - postgres -c "createuser -DRSP netdisco"
    Enter password for new role:
    Enter it again:
  su - postgres -c "createdb -O netdisco netdisco"
  su - netdisco -c "netdisco-deploy"
  /etc/rc.d/rc.netdisco-daemon start
  /etc/rc.d/rc.netdisco-web start

# Init
# - /etc/rc.d/rc.local
  # Startup postgresql
  if [ -x /etc/rc.d/rc.postgresql ]; then
    /etc/rc.d/rc.postgresql start
  fi
  # Starup Netdisco
  if [ -x /etc/rc.d/rc.netdisco-daemon ]; then
    /etc/rc.d/rc.netdisco-daemon start
  fi
  if [ -x /etc/rc.d/rc.netdisco-web ]; then
    /etc/rc.d/rc.netdisco-web start
  fi
# - /etc/rc.d/rc.local_shutdown
  # Stop Netdisco
  if [ -x /etc/rc.d/rc.netdisco-daemon ]; then
    /etc/rc.d/rc.netdisco-daemon stop
  fi
  if [ -x /etc/rc.d/rc.netdisco-web ]; then
    /etc/rc.d/rc.netdisco-web stop
  fi
  # Stop postgres
  if [ -x /etc/rc.d/rc.postgresql ]; then
    /etc/rc.d/rc.postgresql stop
  fi

# Behind a Proxy 
# - By default the web application daemon starts listening on port 5000
#   and goes into the background. This is ideal for hosting behind a web
#   proxy (e.g. Apache with mod_proxy).
# - After enabling the proxy and proxy_http modules in Apache, a suitable
#   configuration would be:

  ProxyPass / http://localhost:5000/
  ProxyPassReverse / http://localhost:5000/
 
  <Proxy *>
    Order allow,deny
    Allow from all
  </Proxy>
